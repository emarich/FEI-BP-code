
import socket
import sys

# USB Transceiver
# PID: N3TOA09033C
# IP: 192.168.1.254 / 192.168.1.159
# Current: 9.9.9.34 (usb?)
# port: 34048

HOST1 = '255.255.255.255'
PORT1 = 8901
HOST2 = '192.168.1.55'
PORT2 = 7003
HOST3 = '127.0.0.1'
PORT3 = 7001

# socket1 = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
# socket1.bind((HOST1, PORT1))
# socket1.listen()

# socket2 = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
# socket2.bind((HOST2, PORT2))

# TODO
# get data from usb (host1) on pc1
# send it to pc2 with axis studio with bvh broadcast source pc2's wifi
# from pc1 send to wifi pc2 and then get raw data back

# also TODO
# source in bvh broadcast is server -> this set to setudpserver
# destination is destination -> set udp port
# catching packets from broadcast socket.bind(('',8901))

# CONLUSION
# transceiver IP ...254 should be multicast and it is "coded" in driver how trans. and axis studio can create connection
# source in bvh broadcast is ip of server (axis studio)

# when axis studio on another pc, destination addr is to my pc, this is not working

# try:
#     socket3 = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
#     socket3.bind((HOST3, PORT3))
#     #sys.stdout = open('./live_data.txt', 'w')
#     while True:
#         print(socket3.recv(3000))
# finally:
#     sys.stdout.close()
#     sys.stdout = sys.__stdout__

normalbvh = "21.694941 97.256645 -114.639351 0.500587 -1.247663 0.185876 2.515873 3.221413 0.144948 0.550134 -1.150493 -0.464526 1.830507 -0.016933 -2.746994 170.422379 178.141083 179.818436 5.701318 1.703248 -1.333594 2.811160 -3.446197 3.405885 179.918655 178.704315 179.252701 179.918686 178.729965 178.755661 179.669144 179.095459 178.374344 180.000000 178.949448 178.908600 0.000000 1.225636 -1.130387 176.619339 179.138107 179.284393 8.639919 0.147560 8.634752 7.745668 -3.532205 82.275360 177.780884 -172.648056 174.749619 179.494873 -178.838303 -176.918488 43.477409 -0.000024 12.839273 176.995316 179.999985 -160.741119 0.755723 0.000000 -0.000003 180.000000 -180.000000 180.000000 15.000049 -0.000005 22.983458 180.000000 -179.999985 -161.195358 0.000001 0.000007 13.163306 180.000000 -180.000000 -180.000000 0.000010 0.000003 28.287096 0.000001 -0.000009 34.104549 180.000000 -180.000000 -157.286423 180.000000 -180.000000 180.000000 170.000015 -179.999985 -152.110260 179.999985 180.000000 -148.689804 0.000008 0.000006 20.852537 180.000000 -180.000000 180.000000 160.000061 -179.999985 -155.133041 180.000000 179.999985 -142.699570 180.000000 -179.999985 -155.157928 167.337784 -168.433121 -175.427719 178.204178 168.699478 88.995041 179.173172 -168.762375 -179.919983 0.304958 12.924221 -1.750479 136.522598 -179.999985 167.160721 3.004681 0.000008 -19.258894 0.755723 0.000000 -0.000003 0.000005 -0.000002 0.000002 164.999954 -179.999985 157.016541 0.000002 -0.000003 -18.804642 180.000000 179.999985 166.836685 0.000005 -0.000002 0.000002 179.999985 179.999985 151.712906 180.000000 -179.999985 145.895447 0.000000 -0.000002 -22.713579 0.000005 -0.000002 0.000002 9.999979 -0.000006 -27.889727 0.000007 0.000000 -31.310192 179.999985 179.999985 159.147461 0.000005 -0.000002 0.000002 19.999945 -0.000026 -24.866964 0.000004 0.000009 -37.300442 0.000001 -0.000004 -24.842075"
streambvh = "21.69 97.23 -114.66 0.46 -1.27 0.10 -11.00 0.00 0.00 2.54 3.26 0.22 -0.00 -45.06 -0.00 0.52 -1.23 -0.46 -0.00 -42.06 -0.00 1.88 0.03 -2.73 11.00 -0.00 -0.00 170.36 178.08 179.88 -0.00 -45.06 -0.00 5.81 1.64 -1.32 -0.00 -42.06 0.00 2.82 -3.42 3.45 -0.00 8.12 0.00 179.92 178.70 179.34 -0.00 17.98 0.00 179.92 178.72 178.76 0.00 12.76 -0.00 179.69 179.09 178.37 -0.00 19.14 -0.00 180.00 178.95 178.91 0.00 4.25 0.00 180.00 178.77 178.87 -0.00 4.25 0.00 176.68 179.13 179.28 -2.90 13.34 -0.00 8.63 0.17 8.64 -16.10 -0.00 0.00 7.76 -3.58 82.28 -28.00 0.00 0.00 177.80 -172.64 174.77 -26.00 0.00 -0.00 179.46 -178.87 -176.96 -1.94 -0.48 2.52 43.48 -0.00 12.84 -3.87 0.00 0.00 177.00 180.00 -160.74 -2.69 0.00 0.00 0.76 0.00 -0.00 -3.39 0.53 2.08 180.00 -180.00 180.00 -5.49 -0.10 1.05 15.00 -0.00 22.98 -3.81 0.00 0.00 180.00 -180.00 -161.20 -2.16 0.00 0.00 0.00 0.00 13.16 -3.56 0.54 0.80 180.00 -180.00 -180.00 -5.44 -0.09 0.33 0.00 0.00 28.29 -4.15 0.00 0.00 0.00 -0.00 34.10 -2.60 0.00 0.00 180.00 -180.00 -157.29 -3.54 0.57 -0.14 180.00 -180.00 180.00 -4.87 -0.02 -0.50 170.00 -180.00 -152.11 -3.62 0.00 0.00 180.00 180.00 -148.69 -2.51 0.00 0.00 0.00 0.00 20.85 -3.32 0.49 -1.26 180.00 -180.00 180.00 -4.35 -0.02 -1.15 160.00 -180.00 -155.13 -2.90 0.00 0.00 180.00 180.00 -142.70 -1.83 0.00 0.00 180.00 -180.00 -155.16 2.90 13.34 0.00 167.36 -168.44 -175.43 16.10 0.00 0.00 178.26 168.69 88.97 28.00 0.00 0.00 179.31 -168.75 179.98 26.00 -0.00 0.00 0.32 13.00 -1.81 1.94 -0.48 2.52 136.52 -180.00 167.16 3.87 0.00 0.00 3.00 0.00 -19.26 2.69 0.00 0.00 0.76 0.00 -0.00 3.39 0.53 2.08 0.00 -0.00 0.00 5.49 -0.10 1.05 165.00 -180.00 157.02 3.81 0.00 0.00 0.00 -0.00 -18.80 2.16 0.00 0.00 180.00 180.00 166.84 3.56 0.54 0.80 0.00 -0.00 0.00 5.44 -0.09 0.33 180.00 180.00 151.71 4.15 0.00 0.00 180.00 -180.00 145.90 2.60 0.00 0.00 0.00 -0.00 -22.71 3.54 0.57 -0.14 0.00 -0.00 0.00 4.87 -0.02 -0.50 10.00 -0.00 -27.89 3.62 0.00 0.00 0.00 0.00 -31.31 2.51 0.00 0.00 180.00 180.00 159.15 3.32 0.49 -1.26 0.00 -0.00 0.00 4.35 -0.02 -1.15 20.00 -0.00 -24.87 2.90 0.00 0.00 0.00 0.00 -37.30 1.83 0.00 0.00 0.00 -0.00 -24.84"

normalbvh = list(normalbvh.split(" "))
streambvh = list(streambvh.split(" "))

for n,s in zip(normalbvh, streambvh):
    print(n + " " + s)